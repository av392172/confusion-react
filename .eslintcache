[{"E:\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js":"1","E:\\Coursera\\React\\confusion\\src\\index.js":"2","E:\\Coursera\\React\\confusion\\src\\shared\\dishes.js":"3","E:\\Coursera\\React\\confusion\\src\\components\\MainComponent.js":"4","E:\\Coursera\\React\\confusion\\src\\App.js":"5","E:\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js":"6","E:\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js":"7","E:\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js":"8","E:\\Coursera\\React\\confusion\\src\\reportWebVitals.js":"9","E:\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js":"10","E:\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js":"11","E:\\Coursera\\React\\confusion\\src\\shared\\leaders.js":"12","E:\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js":"13","E:\\Coursera\\React\\confusion\\src\\shared\\comments.js":"14","E:\\Coursera\\React\\confusion\\src\\shared\\promotions.js":"15"},{"size":2163,"mtime":1607965450528,"results":"16","hashOfConfig":"17"},{"size":639,"mtime":1607778896339,"results":"18","hashOfConfig":"17"},{"size":1448,"mtime":1607916578358,"results":"19","hashOfConfig":"17"},{"size":1965,"mtime":1608176797273,"results":"20","hashOfConfig":"17"},{"size":532,"mtime":1608176796994,"results":"21","hashOfConfig":"17"},{"size":2831,"mtime":1607992947937,"results":"22","hashOfConfig":"17"},{"size":1239,"mtime":1607965049208,"results":"23","hashOfConfig":"17"},{"size":5548,"mtime":1608135495894,"results":"24","hashOfConfig":"17"},{"size":362,"mtime":1607102129651,"results":"25","hashOfConfig":"17"},{"size":1113,"mtime":1607916576492,"results":"26","hashOfConfig":"17"},{"size":11058,"mtime":1608092169405,"results":"27","hashOfConfig":"17"},{"size":2426,"mtime":1608003737336,"results":"28","hashOfConfig":"17"},{"size":4395,"mtime":1608003872435,"results":"29","hashOfConfig":"17"},{"size":4279,"mtime":1607916576312,"results":"30","hashOfConfig":"17"},{"size":445,"mtime":1607916576281,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1karaok",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"E:\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js",[],["70","71"],"E:\\Coursera\\React\\confusion\\src\\index.js",[],["72","73"],"E:\\Coursera\\React\\confusion\\src\\shared\\dishes.js",[],"E:\\Coursera\\React\\confusion\\src\\components\\MainComponent.js",["74"],"E:\\Coursera\\React\\confusion\\src\\App.js",[],"E:\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js",[],["75","76"],"E:\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js",["77","78","79"],"import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport Dishdetail from './DishdetailComponent'; \r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction RenderMenuItem({dish, onClick}){\r\n  return (\r\n    <Card>\r\n      <Link to={`/menu/${dish.id}`}>\r\n        <CardImg width=\"100%\" src={dish.image} alt={dish.name}/>\r\n        <CardImgOverlay>\r\n          <CardTitle>{dish.name}</CardTitle>\r\n        </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst Menu = (props) => {\r\n  const menu = props.dishes.map((dish) => {\r\n      return (\r\n        <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n          <RenderMenuItem dish={dish}/>\r\n        </div>\r\n      );\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n          <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>Menu</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n            {menu}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Menu;",["80","81"],"E:\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js",[],"E:\\Coursera\\React\\confusion\\src\\reportWebVitals.js",[],["82","83"],"E:\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js",[],["84","85"],"E:\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js",["86"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '', \r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        console.log(\"Current state is: \" + JSON.stringify(this.state));\r\n        alert(\"Current state is: \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: {...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email){\r\n        const errors ={\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if(this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >=3 characters';\r\n        else if(this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <=10 characters';\r\n\r\n        if(this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >=3 characters';\r\n        else if(this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <=10 characters';\r\n        \r\n        if(this.state.touched.telnum && telnum.length !== 10)\r\n            errors.telnum = 'Tel. Number should be of 10 digits';\r\n        \r\n        const reg = /^\\d+$/;\r\n        if(this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contains only numbers'\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n        errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\" \r\n                                        value={this.state.firstname}\r\n                                        valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onBlur={this.handleBlur('firstname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\" \r\n                                        value={this.state.lastname}\r\n                                        valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onBlur={this.handleBlur('lastname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\" \r\n                                        value={this.state.telnum}\r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onBlur={this.handleBlur('telnum')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" name=\"agree\"\r\n                                            checked={this.state.agree}\r\n                                            onChange={this.handleInputChange} /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                    value={this.state.contactType}\r\n                                    onChange={this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.message}\r\n                                        onChange={this.handleInputChange}\r\n                                     />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","E:\\Coursera\\React\\confusion\\src\\shared\\leaders.js",[],"E:\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js",[],"E:\\Coursera\\React\\confusion\\src\\shared\\comments.js",[],"E:\\Coursera\\React\\confusion\\src\\shared\\promotions.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":23,"column":3,"nodeType":"95","messageId":"96","endLine":26,"endColumn":4},{"ruleId":"87","replacedBy":"97"},{"ruleId":"89","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":41,"nodeType":"101","messageId":"102","endLine":2,"endColumn":49},{"ruleId":"99","severity":1,"message":"103","line":2,"column":51,"nodeType":"101","messageId":"102","endLine":2,"endColumn":59},{"ruleId":"99","severity":1,"message":"104","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":18},{"ruleId":"87","replacedBy":"105"},{"ruleId":"89","replacedBy":"106"},{"ruleId":"87","replacedBy":"107"},{"ruleId":"89","replacedBy":"108"},{"ruleId":"87","replacedBy":"109"},{"ruleId":"89","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":119,"column":29,"nodeType":"113","endLine":119,"endColumn":71},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["114"],["115"],"no-unused-vars","'CardText' is defined but never used.","Identifier","unusedVar","'CardBody' is defined but never used.","'Dishdetail' is defined but never used.",["114"],["115"],["114"],["115"],["114"],["115"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]