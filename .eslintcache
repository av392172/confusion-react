[{"E:\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js":"1","E:\\Coursera\\React\\confusion\\src\\index.js":"2","E:\\Coursera\\React\\confusion\\src\\shared\\dishes.js":"3","E:\\Coursera\\React\\confusion\\src\\components\\MainComponent.js":"4","E:\\Coursera\\React\\confusion\\src\\App.js":"5","E:\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js":"6","E:\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js":"7","E:\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js":"8","E:\\Coursera\\React\\confusion\\src\\reportWebVitals.js":"9","E:\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js":"10","E:\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js":"11","E:\\Coursera\\React\\confusion\\src\\shared\\leaders.js":"12","E:\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js":"13","E:\\Coursera\\React\\confusion\\src\\shared\\comments.js":"14","E:\\Coursera\\React\\confusion\\src\\shared\\promotions.js":"15","E:\\Coursera\\React\\confusion\\src\\redux\\configureStore.js":"16","E:\\Coursera\\React\\confusion\\src\\redux\\comments.js":"17","E:\\Coursera\\React\\confusion\\src\\redux\\promotions.js":"18"},{"size":6556,"mtime":1608313322005,"results":"19","hashOfConfig":"20"},{"size":639,"mtime":1607778896339,"results":"21","hashOfConfig":"20"},{"size":1448,"mtime":1607916578358,"results":"22","hashOfConfig":"20"},{"size":1965,"mtime":1608176797273,"results":"23","hashOfConfig":"20"},{"size":532,"mtime":1608176796994,"results":"24","hashOfConfig":"20"},{"size":2831,"mtime":1607992947937,"results":"25","hashOfConfig":"20"},{"size":1222,"mtime":1608346088397,"results":"26","hashOfConfig":"20"},{"size":5548,"mtime":1608135495894,"results":"27","hashOfConfig":"20"},{"size":362,"mtime":1607102129651,"results":"28","hashOfConfig":"20"},{"size":1113,"mtime":1607916576492,"results":"29","hashOfConfig":"20"},{"size":10865,"mtime":1608311718265,"results":"30","hashOfConfig":"20"},{"size":2426,"mtime":1608003737336,"results":"31","hashOfConfig":"20"},{"size":4395,"mtime":1608003872435,"results":"32","hashOfConfig":"20"},{"size":4279,"mtime":1607916576312,"results":"33","hashOfConfig":"20"},{"size":445,"mtime":1607916576281,"results":"34","hashOfConfig":"20"},{"size":484,"mtime":1608345814731,"results":"35","hashOfConfig":"20"},{"size":188,"mtime":1608345814730,"results":"36","hashOfConfig":"20"},{"size":196,"mtime":1608345814730,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1karaok",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js",["85","86","87"],"import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalHeader, ModalBody, Label, Col, Row\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg top src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({ comments }) {\r\n    if (comments != null)\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n                <CommentForm />\r\n            </div>\r\n        );\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n\r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    };\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"yourname\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two characters!',\r\n                                            maxLength: 'Must be 15 characters or less!'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"message\" md={2}>Comment</Label>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst Dishdetail = (props) => {\r\n    if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments} />\r\n                </div>\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\nexport default Dishdetail;",["88","89"],"E:\\Coursera\\React\\confusion\\src\\index.js",[],["90","91"],"E:\\Coursera\\React\\confusion\\src\\shared\\dishes.js",[],["92","93"],"E:\\Coursera\\React\\confusion\\src\\components\\MainComponent.js",["94"],"import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Dishdetail from './DishdetailComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Footer from './FooterComponent';\r\nimport Header from \"./HeaderComponent\";\r\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  };\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.filter((dish) => dish.featured)[0]}\r\n          leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n          promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n        />\r\n      ); \r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return (\r\n        <Dishdetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <Switch>\r\n          <Route path=\"/home\" component={HomePage}/>\r\n          <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />}/>\r\n          <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n          <Route exact path=\"/contactus\" component = {Contact} />\r\n          <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />}/>\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));\r\n","E:\\Coursera\\React\\confusion\\src\\App.js",[],"E:\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js",[],["95","96"],"E:\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js",[],"E:\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js",[],"E:\\Coursera\\React\\confusion\\src\\reportWebVitals.js",[],"E:\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js",[],"E:\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js",["97","98","99","100","101","102","103","104"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current state is: \" + JSON.stringify(values));\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two characters!',\r\n                                            maxLength: 'Must be 15 characters or less!'\r\n                                        }}\r\n                                    />\r\n\r\n\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two characters!',\r\n                                            maxLength: 'Must be 15 characters or less!'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two numbers!',\r\n                                            maxLength: 'Must be 15 numbers or less!',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;",["105","106"],"E:\\Coursera\\React\\confusion\\src\\shared\\leaders.js",[],["107","108"],"E:\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js",[],"E:\\Coursera\\React\\confusion\\src\\shared\\comments.js",[],["109","110"],"E:\\Coursera\\React\\confusion\\src\\shared\\promotions.js",[],["111","112"],"E:\\Coursera\\React\\confusion\\src\\redux\\configureStore.js",[],"E:\\Coursera\\React\\confusion\\src\\redux\\comments.js",[],"E:\\Coursera\\React\\confusion\\src\\redux\\promotions.js",[],{"ruleId":"113","severity":1,"message":"114","line":85,"column":37,"nodeType":"115","endLine":86,"endColumn":66},{"ruleId":"113","severity":1,"message":"116","line":98,"column":37,"nodeType":"115","endLine":104,"endColumn":39},{"ruleId":"113","severity":1,"message":"117","line":120,"column":37,"nodeType":"115","endLine":122,"endColumn":68},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"118","replacedBy":"124"},{"ruleId":"120","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":23,"column":3,"nodeType":"128","messageId":"129","endLine":26,"endColumn":4},{"ruleId":"118","replacedBy":"130"},{"ruleId":"120","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":59,"column":29,"nodeType":"115","endLine":59,"endColumn":71},{"ruleId":"113","severity":1,"message":"116","line":73,"column":37,"nodeType":"115","endLine":79,"endColumn":39},{"ruleId":"113","severity":1,"message":"116","line":98,"column":37,"nodeType":"115","endLine":104,"endColumn":39},{"ruleId":"113","severity":1,"message":"116","line":120,"column":37,"nodeType":"115","endLine":126,"endColumn":39},{"ruleId":"113","severity":1,"message":"116","line":143,"column":37,"nodeType":"115","endLine":149,"endColumn":39},{"ruleId":"113","severity":1,"message":"134","line":165,"column":45,"nodeType":"115","endLine":167,"endColumn":47},{"ruleId":"113","severity":1,"message":"114","line":173,"column":37,"nodeType":"115","endLine":174,"endColumn":66},{"ruleId":"113","severity":1,"message":"117","line":183,"column":37,"nodeType":"115","endLine":185,"endColumn":68},{"ruleId":"118","replacedBy":"135"},{"ruleId":"120","replacedBy":"136"},{"ruleId":"118","replacedBy":"137"},{"ruleId":"120","replacedBy":"138"},{"ruleId":"118","replacedBy":"139"},{"ruleId":"120","replacedBy":"140"},{"ruleId":"118","replacedBy":"141"},{"ruleId":"120","replacedBy":"142"},"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["143"],"no-negated-in-lhs",["144"],["143"],["144"],["143"],["144"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["143"],["144"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["143"],["144"],["143"],["144"],["143"],["144"],["143"],["144"],"no-global-assign","no-unsafe-negation"]