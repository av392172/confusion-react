[{"E:\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js":"1","E:\\Coursera\\React\\confusion\\src\\index.js":"2","E:\\Coursera\\React\\confusion\\src\\shared\\dishes.js":"3","E:\\Coursera\\React\\confusion\\src\\components\\MainComponent.js":"4","E:\\Coursera\\React\\confusion\\src\\App.js":"5","E:\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js":"6","E:\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js":"7","E:\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js":"8","E:\\Coursera\\React\\confusion\\src\\reportWebVitals.js":"9","E:\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js":"10","E:\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js":"11","E:\\Coursera\\React\\confusion\\src\\shared\\leaders.js":"12","E:\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js":"13","E:\\Coursera\\React\\confusion\\src\\shared\\comments.js":"14","E:\\Coursera\\React\\confusion\\src\\shared\\promotions.js":"15","E:\\Coursera\\React\\confusion\\src\\redux\\configureStore.js":"16","E:\\Coursera\\React\\confusion\\src\\redux\\comments.js":"17","E:\\Coursera\\React\\confusion\\src\\redux\\promotions.js":"18","E:\\Coursera\\React\\confusion\\src\\redux\\leaders.js":"19","E:\\Coursera\\React\\confusion\\src\\redux\\ActionCreators.js":"20","E:\\Coursera\\React\\confusion\\src\\redux\\ActionTypes.js":"21","E:\\Coursera\\React\\confusion\\src\\components\\LoadingComponent.js":"22","E:\\Coursera\\React\\confusion\\src\\redux\\dishes.js":"23","E:\\Coursera\\React\\confusion\\src\\redux\\forms.js":"24","E:\\Coursera\\React\\confusion\\src\\shared\\baseUrl.js":"25"},{"size":7854,"mtime":1609256114616,"results":"26","hashOfConfig":"27"},{"size":639,"mtime":1607778896339,"results":"28","hashOfConfig":"27"},{"size":1448,"mtime":1607916578358,"results":"29","hashOfConfig":"27"},{"size":3816,"mtime":1609862696345,"results":"30","hashOfConfig":"27"},{"size":532,"mtime":1608176796994,"results":"31","hashOfConfig":"27"},{"size":2831,"mtime":1607992947937,"results":"32","hashOfConfig":"27"},{"size":1805,"mtime":1608944030281,"results":"33","hashOfConfig":"27"},{"size":5548,"mtime":1608135495894,"results":"34","hashOfConfig":"27"},{"size":362,"mtime":1607102129651,"results":"35","hashOfConfig":"27"},{"size":2160,"mtime":1609289700247,"results":"36","hashOfConfig":"27"},{"size":10917,"mtime":1608598649781,"results":"37","hashOfConfig":"27"},{"size":2426,"mtime":1608003737336,"results":"38","hashOfConfig":"27"},{"size":5396,"mtime":1609303228471,"results":"39","hashOfConfig":"27"},{"size":4279,"mtime":1607916576312,"results":"40","hashOfConfig":"27"},{"size":445,"mtime":1607916576281,"results":"41","hashOfConfig":"27"},{"size":795,"mtime":1608598917299,"results":"42","hashOfConfig":"27"},{"size":539,"mtime":1609030497030,"results":"43","hashOfConfig":"27"},{"size":683,"mtime":1608943736311,"results":"44","hashOfConfig":"27"},{"size":674,"mtime":1609289107573,"results":"45","hashOfConfig":"27"},{"size":5769,"mtime":1609862702256,"results":"46","hashOfConfig":"27"},{"size":556,"mtime":1609289063581,"results":"47","hashOfConfig":"27"},{"size":280,"mtime":1608524754315,"results":"48","hashOfConfig":"27"},{"size":642,"mtime":1608524553463,"results":"49","hashOfConfig":"27"},{"size":153,"mtime":1608598652330,"results":"50","hashOfConfig":"27"},{"size":50,"mtime":1608867180145,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"1karaok",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Coursera\\React\\confusion\\src\\components\\DishdetailComponent.js",["113","114","115"],"import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalHeader, ModalBody, Label, Col, Row\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    if (comments != null)\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                    <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                                    </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n\r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    };\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"yourname\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two characters!',\r\n                                            maxLength: 'Must be 15 characters or less!'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\nexport default DishDetail;",["116","117"],"E:\\Coursera\\React\\confusion\\src\\index.js",[],"E:\\Coursera\\React\\confusion\\src\\shared\\dishes.js",[],["118","119"],"E:\\Coursera\\React\\confusion\\src\\components\\MainComponent.js",["120","121"],"E:\\Coursera\\React\\confusion\\src\\App.js",[],["122","123"],"E:\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js",[],["124","125"],"E:\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js",[],"E:\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js",[],["126","127"],"E:\\Coursera\\React\\confusion\\src\\reportWebVitals.js",[],"E:\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js",[],"E:\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js",["128","129","130","131","132","133","134","135","136"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current state is: \" + JSON.stringify(values));\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two characters!',\r\n                                            maxLength: 'Must be 15 characters or less!'\r\n                                        }}\r\n                                    />\r\n\r\n\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two characters!',\r\n                                            maxLength: 'Must be 15 characters or less!'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than two numbers!',\r\n                                            maxLength: 'Must be 15 numbers or less!',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","E:\\Coursera\\React\\confusion\\src\\shared\\leaders.js",[],["137","138"],"E:\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js",[],"E:\\Coursera\\React\\confusion\\src\\shared\\comments.js",[],["139","140"],"E:\\Coursera\\React\\confusion\\src\\shared\\promotions.js",[],["141","142"],"E:\\Coursera\\React\\confusion\\src\\redux\\configureStore.js",[],"E:\\Coursera\\React\\confusion\\src\\redux\\comments.js",[],"E:\\Coursera\\React\\confusion\\src\\redux\\promotions.js",[],"E:\\Coursera\\React\\confusion\\src\\redux\\leaders.js",[],"E:\\Coursera\\React\\confusion\\src\\redux\\ActionCreators.js",[],"E:\\Coursera\\React\\confusion\\src\\redux\\ActionTypes.js",[],"E:\\Coursera\\React\\confusion\\src\\components\\LoadingComponent.js",[],"E:\\Coursera\\React\\confusion\\src\\redux\\dishes.js",[],["143","144"],"E:\\Coursera\\React\\confusion\\src\\redux\\forms.js",[],"E:\\Coursera\\React\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"145","severity":1,"message":"146","line":100,"column":37,"nodeType":"147","endLine":101,"endColumn":66},{"ruleId":"145","severity":1,"message":"148","line":113,"column":37,"nodeType":"147","endLine":119,"endColumn":39},{"ruleId":"145","severity":1,"message":"149","line":135,"column":37,"nodeType":"147","endLine":137,"endColumn":68},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"150","replacedBy":"154"},{"ruleId":"152","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":13,"column":10,"nodeType":"158","messageId":"159","endLine":13,"endColumn":20},{"ruleId":"160","severity":1,"message":"161","line":37,"column":3,"nodeType":"162","messageId":"163","endLine":40,"endColumn":4},{"ruleId":"150","replacedBy":"164"},{"ruleId":"152","replacedBy":"165"},{"ruleId":"150","replacedBy":"166"},{"ruleId":"152","replacedBy":"167"},{"ruleId":"150","replacedBy":"168"},{"ruleId":"152","replacedBy":"169"},{"ruleId":"156","severity":1,"message":"170","line":4,"column":33,"nodeType":"158","messageId":"159","endLine":4,"endColumn":40},{"ruleId":"171","severity":1,"message":"172","line":60,"column":29,"nodeType":"147","endLine":60,"endColumn":71},{"ruleId":"145","severity":1,"message":"148","line":74,"column":37,"nodeType":"147","endLine":80,"endColumn":39},{"ruleId":"145","severity":1,"message":"148","line":99,"column":37,"nodeType":"147","endLine":105,"endColumn":39},{"ruleId":"145","severity":1,"message":"148","line":121,"column":37,"nodeType":"147","endLine":127,"endColumn":39},{"ruleId":"145","severity":1,"message":"148","line":144,"column":37,"nodeType":"147","endLine":150,"endColumn":39},{"ruleId":"145","severity":1,"message":"173","line":166,"column":45,"nodeType":"147","endLine":168,"endColumn":47},{"ruleId":"145","severity":1,"message":"146","line":174,"column":37,"nodeType":"147","endLine":175,"endColumn":66},{"ruleId":"145","severity":1,"message":"149","line":184,"column":37,"nodeType":"147","endLine":186,"endColumn":68},{"ruleId":"150","replacedBy":"174"},{"ruleId":"152","replacedBy":"175"},{"ruleId":"150","replacedBy":"176"},{"ruleId":"152","replacedBy":"177"},{"ruleId":"150","replacedBy":"178"},{"ruleId":"152","replacedBy":"179"},{"ruleId":"150","replacedBy":"180"},{"ruleId":"152","replacedBy":"181"},"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["182"],"no-negated-in-lhs",["183"],["182"],["183"],"no-unused-vars","'Transition' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["182"],["183"],["182"],["183"],["182"],["183"],"'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["182"],["183"],["182"],["183"],["182"],["183"],["182"],["183"],"no-global-assign","no-unsafe-negation"]